import mongoose from 'mongoose';
import dotenv from 'dotenv';
import { customerOrderService } from '../src/services/customerOrderService';
import { CustomerOrder } from '../src/models/CustomerOrder';

dotenv.config();

async function syncAllOrders() {
  try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/telesite-analytics');
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

    // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∑–∞–∫–∞–∑—ã
    console.log('\nüßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ–∫—É—â–∏—Ö –∑–∞–∫–∞–∑–æ–≤...');
    const deleteResult = await CustomerOrder.deleteMany({});
    console.log(`–£–¥–∞–ª–µ–Ω–æ ${deleteResult.deletedCount} –∑–∞–∫–∞–∑–æ–≤`);

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –∑–∞–∫–∞–∑—ã –∏–∑ API
    console.log('\nüì• –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –∏–∑ API...');
    const orders = await customerOrderService.getAllOrders();
    console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${orders.length} –∑–∞–∫–∞–∑–æ–≤ –∏–∑ API`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–∫–æ–ª—å–∫–æ –∑–∞–∫–∞–∑–æ–≤ –≤ –ë–î
    const totalInDb = await CustomerOrder.countDocuments();
    console.log(`üìä –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –ë–î: ${totalInDb} –∑–∞–∫–∞–∑–æ–≤`);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
    const statusStats = await CustomerOrder.aggregate([
      {
        $group: {
          _id: '$status',
          count: { $sum: 1 }
        }
      },
      {
        $sort: { count: -1 }
      }
    ]);

    console.log('\nüìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º:');
    statusStats.forEach(stat => {
      console.log(`   ${stat._id}: ${stat.count} –∑–∞–∫–∞–∑–æ–≤`);
    });

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –º–µ—Å—è—Ü–∞–º
    const monthStats = await CustomerOrder.aggregate([
      {
        $group: {
          _id: {
            $substr: ['$paymentDate', 3, 7] // –ò–∑–≤–ª–µ–∫–∞–µ–º MM.YYYY
          },
          count: { $sum: 1 }
        }
      },
      {
        $sort: { _id: -1 }
      },
      {
        $limit: 12
      }
    ]);

    console.log('\nüìÖ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –º–µ—Å—è—Ü–∞–º:');
    monthStats.forEach(stat => {
      console.log(`   ${stat._id}: ${stat.count} –∑–∞–∫–∞–∑–æ–≤`);
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã
    const latestOrders = await CustomerOrder
      .find()
      .sort({ paymentDate: -1 })
      .limit(5);

    console.log('\nüïê –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞–∫–∞–∑–æ–≤:');
    latestOrders.forEach(order => {
      console.log(`   ${order.id} - ${order.paymentDate} - ${order.status} - ${order.customerName}`);
    });

    console.log('\n‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    console.log(`üìä –ò—Ç–æ–≥–æ –≤ –ë–î: ${totalInDb} –∑–∞–∫–∞–∑–æ–≤`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üëã –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å MongoDB –∑–∞–∫—Ä—ã—Ç–æ');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
syncAllOrders(); 